const { Telegraf } = require('telegraf');
require('dotenv').config();

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞
 * @param {string} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {boolean} useMarkdown - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Markdown
 * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
const sendMessageToUser = async (telegramId, message, useMarkdown = false) => {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    const tempBot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ Markdown
    // –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
    if (useMarkdown) {
      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º Markdown
        await tempBot.telegram.sendMessage(telegramId, message, { parse_mode: 'Markdown' });
      } catch (markdownError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å Markdown, –ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', markdownError);
        // –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å Markdown, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await tempBot.telegram.sendMessage(telegramId, message);
      }
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await tempBot.telegram.sendMessage(telegramId, message);
    }

    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}:`, error);
    return false;
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * @param {string} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} roleName - –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏
 * @param {number|null} durationMonths - –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª–∏ –≤ –º–µ—Å—è—Ü–∞—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è VIP)
 * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
const sendRoleChangeNotification = async (telegramId, roleName, durationMonths = null) => {
  try {
    const roleEmoji = {
      'BASIC': 'üë§',
      'VIP': '‚≠ê',
      'ADMIN': 'üõ°Ô∏è',
      'CEO': 'üëë'
    };

    const emoji = roleEmoji[roleName] || 'üîÑ';

    let message = `${emoji} *–í–∞—à–∞ —Ä–æ–ª—å –≤ FL Hub –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!*\n\n` +
                 `–ù–æ–≤–∞—è —Ä–æ–ª—å: *${roleName}*\n\n`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ä–æ–∫–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è VIP
    if (roleName === 'VIP' && durationMonths) {
      // –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
      const now = new Date();
      const expiryDate = new Date(now);
      expiryDate.setMonth(now.getMonth() + parseInt(durationMonths));

      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
      const formattedDate = expiryDate.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
      });

      message += `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: *${durationMonths} –º–µ—Å.* (–¥–æ ${formattedDate})\n\n`;
    }

    message += `_–≠—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Å—Ç—É–ø–∏—Ç –≤ —Å–∏–ª—É –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ._`;

    return await sendMessageToUser(telegramId, message, true);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}:`, error);
    return false;
  }
};

module.exports = {
  sendMessageToUser,
  sendRoleChangeNotification
};
